@* @using finalproject.Models
@model finalproject.Models.Template
@{
    ViewData["Title"] = "Template Detail";
}
@if (Model == null)
{
    <div>No template available.</div>
}
else
{
    <h2>@Model.Title</h2>

    <!-- Like Button -->
    @if (User.Identity != null && User.Identity.IsAuthenticated)
    {
        <form asp-action="Like" method="post" style="display:inline">
            @Html.AntiForgeryToken()
            <input type="hidden" name="templateId" value="@Model.Id" />
            <button type="submit" class="btn btn-success">
                Like (@(Model.Likes?.Count ?? 0))
            </button>
        </form>
    }

    <!-- Navigation Tabs -->
    <ul class="nav nav-tabs" id="templateTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="general-tab" data-bs-toggle="tab" data-bs-target="#general" type="button" role="tab" aria-controls="general" aria-selected="true">
                General
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="questions-tab" data-bs-toggle="tab" data-bs-target="#questions" type="button" role="tab" aria-controls="questions" aria-selected="false">
                Questions
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="results-tab" data-bs-toggle="tab" data-bs-target="#results" type="button" role="tab" aria-controls="results" aria-selected="false">
                Filled Forms
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="aggregation-tab" data-bs-toggle="tab" data-bs-target="#aggregation" type="button" role="tab" aria-controls="aggregation" aria-selected="false">
                Aggregation
            </button>
        </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content" id="templateTabContent">
        <!-- General Tab -->
        <div class="tab-pane fade show active p-3" id="general" role="tabpanel" aria-labelledby="general-tab">
            <h4>General Settings</h4>
            <p><strong>Title:</strong> @Model.Title</p>
            <p><strong>Description:</strong> @Model.Description</p>
            <p><strong>Access:</strong> @(Model.IsPublic ? "Public" : "Restricted")</p>
            @if (!Model.IsPublic)
            {
                <p><strong>Restricted Users:</strong> @Model.RestrictedToUserIds</p>
            }
            @{
                var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
                bool canEdit = User.IsInRole("Admin") || (Model.CreatedById == userId);
            }
            @if (canEdit)
            {
                <a href="@Url.Action("Edit", "Template", new { id = Model.Id })" class="btn btn-warning">Edit Template</a>
            }
        </div>

        <!-- Questions Tab -->
        <div class="tab-pane fade p-3" id="questions" role="tabpanel" aria-labelledby="questions-tab">
            <h4>Questions</h4>
            @if (Model.Questions != null && Model.Questions.Any())
            {
                <ul class="list-group">
                    @foreach(var question in Model.Questions)
                    {
                        <li class="list-group-item">
                            <strong>@question.QuestionText</strong> (Type: @question.QuestionType)
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No questions available.</p>
            }
        </div>

        <!-- Filled Forms Tab -->
        <div class="tab-pane fade p-3" id="results" role="tabpanel" aria-labelledby="results-tab">
            <h4>Filled Forms</h4>
            <!-- Button to fill out the form -->
            <button type="button" class="btn btn-success mb-3"
                    onclick="location.href='@Url.Action("FillForm", "Form", new { templateId = Model.Id })'">
                Fill Out Form
            </button>
            @if (Model.FilledForms == null || !Model.FilledForms.Any())
            {
                <p>No filled forms available.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach(var filledForm in Model.FilledForms)
                    {
                        <li class="list-group-item">
                            <a href="@Url.Action("Detail", "Form", new { id = filledForm.Id })">
                                Submitted on @(filledForm.SubmittedAt.ToString("g"))
                            </a>
                        </li>
                    }
                </ul>
            }
        </div>

        <!-- Aggregation Tab -->
        <div class="tab-pane fade p-3" id="aggregation" role="tabpanel" aria-labelledby="aggregation-tab">
            <h4>Aggregated Results</h4>
            <p>Aggregation logic goes here (e.g., average, mode, etc.).</p>
            @if (Model.Questions == null || !Model.Questions.Any())
            {
                <p>No questions available for aggregation.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var question in Model.Questions)
                    {
                        <li class="list-group-item">
                            <strong>@question.QuestionText</strong>: 
                            @(Model.FilledForms?.SelectMany(ff => ff.Answers)
                                .Count(a => a.QuestionId == question.Id) ?? 0) responses.
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
    
    <hr />
    
    <!-- Comments Section -->
    <h3>Comments</h3>
    @if (Model.Comments != null && Model.Comments.Any())
    {
        <ul class="list-group mb-3">
            @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
            {
                <li class="list-group-item">
                    <strong>@(comment.CreatedById ?? "Unknown")</strong>
                    (<small>@(comment.CreatedAt.ToString("g"))</small>): @comment.Content
                </li>
            }
        </ul>
    }
    else
    {
        <p>No comments available.</p>
    }
    
    <h4>Add a Comment</h4>
    <form asp-action="AddComment" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" name="templateId" value="@Model.Id" />
        <div class="mb-3">
            <textarea name="commentContent" class="form-control" placeholder="Write your comment here..." required></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Submit Comment</button>
    </form>
}



@* 

        <!-- Filled Forms Tab -->
        <div class="tab-pane fade p-3" id="results" role="tabpanel" aria-labelledby="results-tab">
            <h4>Filled Forms</h4>
            
   @if (Model != null && Model.FilledForms != null && Model.FilledForms.Any())

            {
                <p>No filled forms available.</p>
            }




            else
            {
                <ul>
                    
              @foreach (var filledForm in Model?.FilledForms ?? Enumerable.Empty<FilledForm>())


                    {
                        <li>
                            <a href="@Url.Action("Detail", "Form", new { id = filledForm?.Id ?? 0 })">
                                Submitted on @(filledForm?.SubmittedAt.ToString("g") ?? "N/A")
                            </a>
                        </li>
                    }
                </ul>
            }
        </div>

        <!-- Aggregation Tab -->
        <div class="tab-pane fade p-3" id="aggregation" role="tabpanel" aria-labelledby="aggregation-tab">
            <h4>Aggregated Results</h4>
            <p>Aggregation logic goes here (e.g., average, mode, etc.).</p>

@if (Model != null && Model.Questions != null && Model.Questions.Any(q => q != null))
            
            {
                <ul>
                    @foreach (var question in Model.Questions.Where(q => q != null))
                    {
                        <li>
                            <strong>@(question?.QuestionText ?? "N/A")</strong>: 
                            @(Model.FilledForms?.SelectMany(ff => ff.Answers)
                                 .Count(a => a.QuestionId == (question?.Id ?? 0)) ?? 0) responses.
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No questions available for aggregation.</p>
            }
        </div>
    </div>

    <hr />

   <!-- Comments Section -->
<h3>Comments</h3>
@if (Model?.Comments?.Any(c => c != null) ?? false)
{
    <ul class="list-unstyled">
        @foreach (var comment in Model.Comments
                              .Where(c => c != null)
                              .OrderByDescending(c => c.CreatedAt))
        {
            <li class="mb-2">
                <strong>@(comment?.CreatedById ?? "Unknown")</strong>
                (<small>@(comment?.CreatedAt.ToString("g") ?? "N/A")</small>): @comment?.Content
            </li>
        }
    </ul>
}
else
{
    <p>No comments available.</p>
}

<h4>Add a Comment</h4>
<form asp-action="AddComment" method="post">
    @Html.AntiForgeryToken()

   
 <input type="hidden" name="templateId" value="@Model?.Id" />

    <div class="mb-3">
        <textarea name="commentContent" class="form-control" placeholder="Write your comment here..." required></textarea>
    </div>
    <button type="submit" class="btn btn-primary">Submit Comment</button>
</form>

} *@






@using finalproject.Models
@model finalproject.Models.Template
@{
    ViewData["Title"] = "Template Detail";
}
@if (Model == null)
{
    <div>No template available.</div>
}
else
{
    <h2>@Model.Title</h2>

    <!-- Like Button -->
    @if (User.Identity != null && User.Identity.IsAuthenticated)
    {
        <form asp-action="Like" method="post" style="display:inline">
            @Html.AntiForgeryToken()
            <input type="hidden" name="templateId" value="@Model.Id" />
            <button type="submit" class="btn btn-success">
                Like (@(Model.Likes?.Count ?? 0))
            </button>
        </form>
    }

    <!-- Navigation Tabs -->
    <ul class="nav nav-tabs" id="templateTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="general-tab" data-bs-toggle="tab" data-bs-target="#general" type="button" role="tab" aria-controls="general" aria-selected="true">
                General
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="questions-tab" data-bs-toggle="tab" data-bs-target="#questions" type="button" role="tab" aria-controls="questions" aria-selected="false">
                Questions
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="results-tab" data-bs-toggle="tab" data-bs-target="#results" type="button" role="tab" aria-controls="results" aria-selected="false">
                Filled Forms
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="aggregation-tab" data-bs-toggle="tab" data-bs-target="#aggregation" type="button" role="tab" aria-controls="aggregation" aria-selected="false">
                Aggregation
            </button>
        </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content" id="templateTabContent">
        <!-- General Tab -->
        <div class="tab-pane fade show active p-3" id="general" role="tabpanel" aria-labelledby="general-tab">
            <h4>General Settings</h4>
            <p><strong>Title:</strong> @Model.Title</p>
            <p><strong>Description:</strong> @Model.Description</p>
            <p><strong>Access:</strong> @(Model.IsPublic ? "Public" : "Restricted")</p>
            @if (!Model.IsPublic)
            {
                <p><strong>Restricted Users:</strong> @Model.RestrictedToUserIds</p>
            }
            @{
                var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
                bool canEdit = User.IsInRole("Admin") || (Model.CreatedById == userId);
            }
            @if (canEdit)
            {
                <a href="@Url.Action("Edit", "Template", new { id = Model.Id })" class="btn btn-warning">Edit Template</a>
            }
        </div>

        <!-- Questions Tab -->
        <div class="tab-pane fade p-3" id="questions" role="tabpanel" aria-labelledby="questions-tab">
            <h4>Questions</h4>
            @if (Model.Questions != null && Model.Questions.Any())
            {
                <ul class="list-group">
                    @foreach(var question in Model.Questions)
                    {
                        <li class="list-group-item">
                            <strong>@question.QuestionText</strong> (Type: @question.QuestionType)
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No questions available.</p>
            }
        </div>

        <!-- Filled Forms Tab -->
        <div class="tab-pane fade p-3" id="results" role="tabpanel" aria-labelledby="results-tab">
            <h4>Filled Forms</h4>
            <!-- Button to fill out the form -->
            <button type="button" class="btn btn-success mb-3"
                    onclick="location.href='@Url.Action("FillForm", "Form", new { templateId = Model.Id })'">
                Fill Out Form
            </button>
            @if (Model.FilledForms == null || !Model.FilledForms.Any())
            {
                <p>No filled forms available.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach(var filledForm in Model.FilledForms)
                    {
                        <li class="list-group-item">
                            <a href="@Url.Action("Detail", "Form", new { id = filledForm.Id })">
                                Submitted on @(filledForm.SubmittedAt.ToString("g"))
                            </a>
                        </li>
                    }
                </ul>
            }
        </div>

        <!-- Aggregation Tab -->
        <div class="tab-pane fade p-3" id="aggregation" role="tabpanel" aria-labelledby="aggregation-tab">
            <h4>Aggregated Results</h4>
            <p>Aggregation logic goes here (e.g., average, mode, etc.).</p>
            @if (Model.Questions == null || !Model.Questions.Any())
            {
                <p>No questions available for aggregation.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var question in Model.Questions)
                    {
                        <li class="list-group-item">
                            <strong>@question.QuestionText</strong>: 
                            @(Model.FilledForms?.SelectMany(ff => ff.Answers)
                                .Count(a => a.QuestionId == question.Id) ?? 0) responses.
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
    
    <hr />
    
    <!-- Comments Section -->
    <h3>Comments</h3>
    @if (Model.Comments != null && Model.Comments.Any())
    {
        <ul class="list-group mb-3">
            @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
            {
                <li class="list-group-item">
                    <strong>@(comment.CreatedById ?? "Unknown")</strong>
                    (<small>@(comment.CreatedAt.ToString("g"))</small>): @comment.Content
                </li>
            }
        </ul>
    }
    else
    {
        <p>No comments available.</p>
    }
    
    <h4>Add a Comment</h4>
    <form asp-action="AddComment" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" name="templateId" value="@Model.Id" />
        <div class="mb-3">
            <textarea name="commentContent" class="form-control" placeholder="Write your comment here..." required></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Submit Comment</button>
    </form>
}
